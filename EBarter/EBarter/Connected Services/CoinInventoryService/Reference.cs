//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EBarter.CoinInventoryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CoinInventoryService.CoinInventorySoap")]
    public interface CoinInventorySoap {
        
        // CODEGEN: Generating message contract since element name ListAllCoinsResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListAllCoins", ReplyAction="*")]
        EBarter.CoinInventoryService.ListAllCoinsResponse ListAllCoins(EBarter.CoinInventoryService.ListAllCoinsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListAllCoins", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.ListAllCoinsResponse> ListAllCoinsAsync(EBarter.CoinInventoryService.ListAllCoinsRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCoinsPrice", ReplyAction="*")]
        EBarter.CoinInventoryService.AddCoinsPriceResponse AddCoinsPrice(EBarter.CoinInventoryService.AddCoinsPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCoinsPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.AddCoinsPriceResponse> AddCoinsPriceAsync(EBarter.CoinInventoryService.AddCoinsPriceRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCoinsPrice", ReplyAction="*")]
        EBarter.CoinInventoryService.DeleteCoinsPriceResponse DeleteCoinsPrice(EBarter.CoinInventoryService.DeleteCoinsPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCoinsPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.DeleteCoinsPriceResponse> DeleteCoinsPriceAsync(EBarter.CoinInventoryService.DeleteCoinsPriceRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCoinsPrice", ReplyAction="*")]
        EBarter.CoinInventoryService.UpdateCoinsPriceResponse UpdateCoinsPrice(EBarter.CoinInventoryService.UpdateCoinsPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCoinsPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.UpdateCoinsPriceResponse> UpdateCoinsPriceAsync(EBarter.CoinInventoryService.UpdateCoinsPriceRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalMinCoinsCost", ReplyAction="*")]
        EBarter.CoinInventoryService.CalMinCoinsCostResponse CalMinCoinsCost(EBarter.CoinInventoryService.CalMinCoinsCostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalMinCoinsCost", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMinCoinsCostResponse> CalMinCoinsCostAsync(EBarter.CoinInventoryService.CalMinCoinsCostRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalMaxCoinsCost", ReplyAction="*")]
        EBarter.CoinInventoryService.CalMaxCoinsCostResponse CalMaxCoinsCost(EBarter.CoinInventoryService.CalMaxCoinsCostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalMaxCoinsCost", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMaxCoinsCostResponse> CalMaxCoinsCostAsync(EBarter.CoinInventoryService.CalMaxCoinsCostRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckInventory", ReplyAction="*")]
        EBarter.CoinInventoryService.CheckInventoryResponse CheckInventory(EBarter.CoinInventoryService.CheckInventoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckInventory", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CheckInventoryResponse> CheckInventoryAsync(EBarter.CoinInventoryService.CheckInventoryRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HowMuchMinCoins", ReplyAction="*")]
        EBarter.CoinInventoryService.HowMuchMinCoinsResponse HowMuchMinCoins(EBarter.CoinInventoryService.HowMuchMinCoinsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HowMuchMinCoins", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMinCoinsResponse> HowMuchMinCoinsAsync(EBarter.CoinInventoryService.HowMuchMinCoinsRequest request);
        
        // CODEGEN: Generating message contract since element name coinName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HowMuchMaxCoins", ReplyAction="*")]
        EBarter.CoinInventoryService.HowMuchMaxCoinsResponse HowMuchMaxCoins(EBarter.CoinInventoryService.HowMuchMaxCoinsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HowMuchMaxCoins", ReplyAction="*")]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMaxCoinsResponse> HowMuchMaxCoinsAsync(EBarter.CoinInventoryService.HowMuchMaxCoinsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListAllCoinsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListAllCoins", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.ListAllCoinsRequestBody Body;
        
        public ListAllCoinsRequest() {
        }
        
        public ListAllCoinsRequest(EBarter.CoinInventoryService.ListAllCoinsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ListAllCoinsRequestBody {
        
        public ListAllCoinsRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListAllCoinsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListAllCoinsResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.ListAllCoinsResponseBody Body;
        
        public ListAllCoinsResponse() {
        }
        
        public ListAllCoinsResponse(EBarter.CoinInventoryService.ListAllCoinsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ListAllCoinsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ListAllCoinsResult;
        
        public ListAllCoinsResponseBody() {
        }
        
        public ListAllCoinsResponseBody(string ListAllCoinsResult) {
            this.ListAllCoinsResult = ListAllCoinsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddCoinsPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddCoinsPrice", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.AddCoinsPriceRequestBody Body;
        
        public AddCoinsPriceRequest() {
        }
        
        public AddCoinsPriceRequest(EBarter.CoinInventoryService.AddCoinsPriceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddCoinsPriceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double minPrice;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double maxPrice;
        
        public AddCoinsPriceRequestBody() {
        }
        
        public AddCoinsPriceRequestBody(string coinName, double minPrice, double maxPrice) {
            this.coinName = coinName;
            this.minPrice = minPrice;
            this.maxPrice = maxPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddCoinsPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddCoinsPriceResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.AddCoinsPriceResponseBody Body;
        
        public AddCoinsPriceResponse() {
        }
        
        public AddCoinsPriceResponse(EBarter.CoinInventoryService.AddCoinsPriceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddCoinsPriceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AddCoinsPriceResult;
        
        public AddCoinsPriceResponseBody() {
        }
        
        public AddCoinsPriceResponseBody(bool AddCoinsPriceResult) {
            this.AddCoinsPriceResult = AddCoinsPriceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteCoinsPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteCoinsPrice", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.DeleteCoinsPriceRequestBody Body;
        
        public DeleteCoinsPriceRequest() {
        }
        
        public DeleteCoinsPriceRequest(EBarter.CoinInventoryService.DeleteCoinsPriceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DeleteCoinsPriceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        public DeleteCoinsPriceRequestBody() {
        }
        
        public DeleteCoinsPriceRequestBody(string coinName) {
            this.coinName = coinName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteCoinsPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteCoinsPriceResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.DeleteCoinsPriceResponseBody Body;
        
        public DeleteCoinsPriceResponse() {
        }
        
        public DeleteCoinsPriceResponse(EBarter.CoinInventoryService.DeleteCoinsPriceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DeleteCoinsPriceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool DeleteCoinsPriceResult;
        
        public DeleteCoinsPriceResponseBody() {
        }
        
        public DeleteCoinsPriceResponseBody(bool DeleteCoinsPriceResult) {
            this.DeleteCoinsPriceResult = DeleteCoinsPriceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateCoinsPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateCoinsPrice", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.UpdateCoinsPriceRequestBody Body;
        
        public UpdateCoinsPriceRequest() {
        }
        
        public UpdateCoinsPriceRequest(EBarter.CoinInventoryService.UpdateCoinsPriceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateCoinsPriceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double coinMinPrice;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double coinMaxPrice;
        
        public UpdateCoinsPriceRequestBody() {
        }
        
        public UpdateCoinsPriceRequestBody(string coinName, double coinMinPrice, double coinMaxPrice) {
            this.coinName = coinName;
            this.coinMinPrice = coinMinPrice;
            this.coinMaxPrice = coinMaxPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateCoinsPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateCoinsPriceResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.UpdateCoinsPriceResponseBody Body;
        
        public UpdateCoinsPriceResponse() {
        }
        
        public UpdateCoinsPriceResponse(EBarter.CoinInventoryService.UpdateCoinsPriceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateCoinsPriceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UpdateCoinsPriceResult;
        
        public UpdateCoinsPriceResponseBody() {
        }
        
        public UpdateCoinsPriceResponseBody(bool UpdateCoinsPriceResult) {
            this.UpdateCoinsPriceResult = UpdateCoinsPriceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CalMinCoinsCostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CalMinCoinsCost", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CalMinCoinsCostRequestBody Body;
        
        public CalMinCoinsCostRequest() {
        }
        
        public CalMinCoinsCostRequest(EBarter.CoinInventoryService.CalMinCoinsCostRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CalMinCoinsCostRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double coinQuantity;
        
        public CalMinCoinsCostRequestBody() {
        }
        
        public CalMinCoinsCostRequestBody(string coinName, double coinQuantity) {
            this.coinName = coinName;
            this.coinQuantity = coinQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CalMinCoinsCostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CalMinCoinsCostResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CalMinCoinsCostResponseBody Body;
        
        public CalMinCoinsCostResponse() {
        }
        
        public CalMinCoinsCostResponse(EBarter.CoinInventoryService.CalMinCoinsCostResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CalMinCoinsCostResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double CalMinCoinsCostResult;
        
        public CalMinCoinsCostResponseBody() {
        }
        
        public CalMinCoinsCostResponseBody(double CalMinCoinsCostResult) {
            this.CalMinCoinsCostResult = CalMinCoinsCostResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CalMaxCoinsCostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CalMaxCoinsCost", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CalMaxCoinsCostRequestBody Body;
        
        public CalMaxCoinsCostRequest() {
        }
        
        public CalMaxCoinsCostRequest(EBarter.CoinInventoryService.CalMaxCoinsCostRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CalMaxCoinsCostRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double coinQuantity;
        
        public CalMaxCoinsCostRequestBody() {
        }
        
        public CalMaxCoinsCostRequestBody(string coinName, double coinQuantity) {
            this.coinName = coinName;
            this.coinQuantity = coinQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CalMaxCoinsCostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CalMaxCoinsCostResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CalMaxCoinsCostResponseBody Body;
        
        public CalMaxCoinsCostResponse() {
        }
        
        public CalMaxCoinsCostResponse(EBarter.CoinInventoryService.CalMaxCoinsCostResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CalMaxCoinsCostResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double CalMaxCoinsCostResult;
        
        public CalMaxCoinsCostResponseBody() {
        }
        
        public CalMaxCoinsCostResponseBody(double CalMaxCoinsCostResult) {
            this.CalMaxCoinsCostResult = CalMaxCoinsCostResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckInventoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckInventory", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CheckInventoryRequestBody Body;
        
        public CheckInventoryRequest() {
        }
        
        public CheckInventoryRequest(EBarter.CoinInventoryService.CheckInventoryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckInventoryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        public CheckInventoryRequestBody() {
        }
        
        public CheckInventoryRequestBody(string coinName) {
            this.coinName = coinName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckInventoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckInventoryResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.CheckInventoryResponseBody Body;
        
        public CheckInventoryResponse() {
        }
        
        public CheckInventoryResponse(EBarter.CoinInventoryService.CheckInventoryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckInventoryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CheckInventoryResult;
        
        public CheckInventoryResponseBody() {
        }
        
        public CheckInventoryResponseBody(string CheckInventoryResult) {
            this.CheckInventoryResult = CheckInventoryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HowMuchMinCoinsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HowMuchMinCoins", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.HowMuchMinCoinsRequestBody Body;
        
        public HowMuchMinCoinsRequest() {
        }
        
        public HowMuchMinCoinsRequest(EBarter.CoinInventoryService.HowMuchMinCoinsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HowMuchMinCoinsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double totalBudget;
        
        public HowMuchMinCoinsRequestBody() {
        }
        
        public HowMuchMinCoinsRequestBody(string coinName, double totalBudget) {
            this.coinName = coinName;
            this.totalBudget = totalBudget;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HowMuchMinCoinsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HowMuchMinCoinsResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.HowMuchMinCoinsResponseBody Body;
        
        public HowMuchMinCoinsResponse() {
        }
        
        public HowMuchMinCoinsResponse(EBarter.CoinInventoryService.HowMuchMinCoinsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HowMuchMinCoinsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double HowMuchMinCoinsResult;
        
        public HowMuchMinCoinsResponseBody() {
        }
        
        public HowMuchMinCoinsResponseBody(double HowMuchMinCoinsResult) {
            this.HowMuchMinCoinsResult = HowMuchMinCoinsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HowMuchMaxCoinsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HowMuchMaxCoins", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.HowMuchMaxCoinsRequestBody Body;
        
        public HowMuchMaxCoinsRequest() {
        }
        
        public HowMuchMaxCoinsRequest(EBarter.CoinInventoryService.HowMuchMaxCoinsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HowMuchMaxCoinsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string coinName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double totalBudget;
        
        public HowMuchMaxCoinsRequestBody() {
        }
        
        public HowMuchMaxCoinsRequestBody(string coinName, double totalBudget) {
            this.coinName = coinName;
            this.totalBudget = totalBudget;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HowMuchMaxCoinsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HowMuchMaxCoinsResponse", Namespace="http://tempuri.org/", Order=0)]
        public EBarter.CoinInventoryService.HowMuchMaxCoinsResponseBody Body;
        
        public HowMuchMaxCoinsResponse() {
        }
        
        public HowMuchMaxCoinsResponse(EBarter.CoinInventoryService.HowMuchMaxCoinsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HowMuchMaxCoinsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public double HowMuchMaxCoinsResult;
        
        public HowMuchMaxCoinsResponseBody() {
        }
        
        public HowMuchMaxCoinsResponseBody(double HowMuchMaxCoinsResult) {
            this.HowMuchMaxCoinsResult = HowMuchMaxCoinsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CoinInventorySoapChannel : EBarter.CoinInventoryService.CoinInventorySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoinInventorySoapClient : System.ServiceModel.ClientBase<EBarter.CoinInventoryService.CoinInventorySoap>, EBarter.CoinInventoryService.CoinInventorySoap {
        
        public CoinInventorySoapClient() {
        }
        
        public CoinInventorySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoinInventorySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoinInventorySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoinInventorySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.ListAllCoinsResponse EBarter.CoinInventoryService.CoinInventorySoap.ListAllCoins(EBarter.CoinInventoryService.ListAllCoinsRequest request) {
            return base.Channel.ListAllCoins(request);
        }
        
        public string ListAllCoins() {
            EBarter.CoinInventoryService.ListAllCoinsRequest inValue = new EBarter.CoinInventoryService.ListAllCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.ListAllCoinsRequestBody();
            EBarter.CoinInventoryService.ListAllCoinsResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).ListAllCoins(inValue);
            return retVal.Body.ListAllCoinsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.ListAllCoinsResponse> EBarter.CoinInventoryService.CoinInventorySoap.ListAllCoinsAsync(EBarter.CoinInventoryService.ListAllCoinsRequest request) {
            return base.Channel.ListAllCoinsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.ListAllCoinsResponse> ListAllCoinsAsync() {
            EBarter.CoinInventoryService.ListAllCoinsRequest inValue = new EBarter.CoinInventoryService.ListAllCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.ListAllCoinsRequestBody();
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).ListAllCoinsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.AddCoinsPriceResponse EBarter.CoinInventoryService.CoinInventorySoap.AddCoinsPrice(EBarter.CoinInventoryService.AddCoinsPriceRequest request) {
            return base.Channel.AddCoinsPrice(request);
        }
        
        public bool AddCoinsPrice(string coinName, double minPrice, double maxPrice) {
            EBarter.CoinInventoryService.AddCoinsPriceRequest inValue = new EBarter.CoinInventoryService.AddCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.AddCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.minPrice = minPrice;
            inValue.Body.maxPrice = maxPrice;
            EBarter.CoinInventoryService.AddCoinsPriceResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).AddCoinsPrice(inValue);
            return retVal.Body.AddCoinsPriceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.AddCoinsPriceResponse> EBarter.CoinInventoryService.CoinInventorySoap.AddCoinsPriceAsync(EBarter.CoinInventoryService.AddCoinsPriceRequest request) {
            return base.Channel.AddCoinsPriceAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.AddCoinsPriceResponse> AddCoinsPriceAsync(string coinName, double minPrice, double maxPrice) {
            EBarter.CoinInventoryService.AddCoinsPriceRequest inValue = new EBarter.CoinInventoryService.AddCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.AddCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.minPrice = minPrice;
            inValue.Body.maxPrice = maxPrice;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).AddCoinsPriceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.DeleteCoinsPriceResponse EBarter.CoinInventoryService.CoinInventorySoap.DeleteCoinsPrice(EBarter.CoinInventoryService.DeleteCoinsPriceRequest request) {
            return base.Channel.DeleteCoinsPrice(request);
        }
        
        public bool DeleteCoinsPrice(string coinName) {
            EBarter.CoinInventoryService.DeleteCoinsPriceRequest inValue = new EBarter.CoinInventoryService.DeleteCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.DeleteCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            EBarter.CoinInventoryService.DeleteCoinsPriceResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).DeleteCoinsPrice(inValue);
            return retVal.Body.DeleteCoinsPriceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.DeleteCoinsPriceResponse> EBarter.CoinInventoryService.CoinInventorySoap.DeleteCoinsPriceAsync(EBarter.CoinInventoryService.DeleteCoinsPriceRequest request) {
            return base.Channel.DeleteCoinsPriceAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.DeleteCoinsPriceResponse> DeleteCoinsPriceAsync(string coinName) {
            EBarter.CoinInventoryService.DeleteCoinsPriceRequest inValue = new EBarter.CoinInventoryService.DeleteCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.DeleteCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).DeleteCoinsPriceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.UpdateCoinsPriceResponse EBarter.CoinInventoryService.CoinInventorySoap.UpdateCoinsPrice(EBarter.CoinInventoryService.UpdateCoinsPriceRequest request) {
            return base.Channel.UpdateCoinsPrice(request);
        }
        
        public bool UpdateCoinsPrice(string coinName, double coinMinPrice, double coinMaxPrice) {
            EBarter.CoinInventoryService.UpdateCoinsPriceRequest inValue = new EBarter.CoinInventoryService.UpdateCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.UpdateCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinMinPrice = coinMinPrice;
            inValue.Body.coinMaxPrice = coinMaxPrice;
            EBarter.CoinInventoryService.UpdateCoinsPriceResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).UpdateCoinsPrice(inValue);
            return retVal.Body.UpdateCoinsPriceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.UpdateCoinsPriceResponse> EBarter.CoinInventoryService.CoinInventorySoap.UpdateCoinsPriceAsync(EBarter.CoinInventoryService.UpdateCoinsPriceRequest request) {
            return base.Channel.UpdateCoinsPriceAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.UpdateCoinsPriceResponse> UpdateCoinsPriceAsync(string coinName, double coinMinPrice, double coinMaxPrice) {
            EBarter.CoinInventoryService.UpdateCoinsPriceRequest inValue = new EBarter.CoinInventoryService.UpdateCoinsPriceRequest();
            inValue.Body = new EBarter.CoinInventoryService.UpdateCoinsPriceRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinMinPrice = coinMinPrice;
            inValue.Body.coinMaxPrice = coinMaxPrice;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).UpdateCoinsPriceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.CalMinCoinsCostResponse EBarter.CoinInventoryService.CoinInventorySoap.CalMinCoinsCost(EBarter.CoinInventoryService.CalMinCoinsCostRequest request) {
            return base.Channel.CalMinCoinsCost(request);
        }
        
        public double CalMinCoinsCost(string coinName, double coinQuantity) {
            EBarter.CoinInventoryService.CalMinCoinsCostRequest inValue = new EBarter.CoinInventoryService.CalMinCoinsCostRequest();
            inValue.Body = new EBarter.CoinInventoryService.CalMinCoinsCostRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinQuantity = coinQuantity;
            EBarter.CoinInventoryService.CalMinCoinsCostResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CalMinCoinsCost(inValue);
            return retVal.Body.CalMinCoinsCostResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMinCoinsCostResponse> EBarter.CoinInventoryService.CoinInventorySoap.CalMinCoinsCostAsync(EBarter.CoinInventoryService.CalMinCoinsCostRequest request) {
            return base.Channel.CalMinCoinsCostAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMinCoinsCostResponse> CalMinCoinsCostAsync(string coinName, double coinQuantity) {
            EBarter.CoinInventoryService.CalMinCoinsCostRequest inValue = new EBarter.CoinInventoryService.CalMinCoinsCostRequest();
            inValue.Body = new EBarter.CoinInventoryService.CalMinCoinsCostRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinQuantity = coinQuantity;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CalMinCoinsCostAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.CalMaxCoinsCostResponse EBarter.CoinInventoryService.CoinInventorySoap.CalMaxCoinsCost(EBarter.CoinInventoryService.CalMaxCoinsCostRequest request) {
            return base.Channel.CalMaxCoinsCost(request);
        }
        
        public double CalMaxCoinsCost(string coinName, double coinQuantity) {
            EBarter.CoinInventoryService.CalMaxCoinsCostRequest inValue = new EBarter.CoinInventoryService.CalMaxCoinsCostRequest();
            inValue.Body = new EBarter.CoinInventoryService.CalMaxCoinsCostRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinQuantity = coinQuantity;
            EBarter.CoinInventoryService.CalMaxCoinsCostResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CalMaxCoinsCost(inValue);
            return retVal.Body.CalMaxCoinsCostResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMaxCoinsCostResponse> EBarter.CoinInventoryService.CoinInventorySoap.CalMaxCoinsCostAsync(EBarter.CoinInventoryService.CalMaxCoinsCostRequest request) {
            return base.Channel.CalMaxCoinsCostAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.CalMaxCoinsCostResponse> CalMaxCoinsCostAsync(string coinName, double coinQuantity) {
            EBarter.CoinInventoryService.CalMaxCoinsCostRequest inValue = new EBarter.CoinInventoryService.CalMaxCoinsCostRequest();
            inValue.Body = new EBarter.CoinInventoryService.CalMaxCoinsCostRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.coinQuantity = coinQuantity;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CalMaxCoinsCostAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.CheckInventoryResponse EBarter.CoinInventoryService.CoinInventorySoap.CheckInventory(EBarter.CoinInventoryService.CheckInventoryRequest request) {
            return base.Channel.CheckInventory(request);
        }
        
        public string CheckInventory(string coinName) {
            EBarter.CoinInventoryService.CheckInventoryRequest inValue = new EBarter.CoinInventoryService.CheckInventoryRequest();
            inValue.Body = new EBarter.CoinInventoryService.CheckInventoryRequestBody();
            inValue.Body.coinName = coinName;
            EBarter.CoinInventoryService.CheckInventoryResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CheckInventory(inValue);
            return retVal.Body.CheckInventoryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.CheckInventoryResponse> EBarter.CoinInventoryService.CoinInventorySoap.CheckInventoryAsync(EBarter.CoinInventoryService.CheckInventoryRequest request) {
            return base.Channel.CheckInventoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.CheckInventoryResponse> CheckInventoryAsync(string coinName) {
            EBarter.CoinInventoryService.CheckInventoryRequest inValue = new EBarter.CoinInventoryService.CheckInventoryRequest();
            inValue.Body = new EBarter.CoinInventoryService.CheckInventoryRequestBody();
            inValue.Body.coinName = coinName;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).CheckInventoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.HowMuchMinCoinsResponse EBarter.CoinInventoryService.CoinInventorySoap.HowMuchMinCoins(EBarter.CoinInventoryService.HowMuchMinCoinsRequest request) {
            return base.Channel.HowMuchMinCoins(request);
        }
        
        public double HowMuchMinCoins(string coinName, double totalBudget) {
            EBarter.CoinInventoryService.HowMuchMinCoinsRequest inValue = new EBarter.CoinInventoryService.HowMuchMinCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.HowMuchMinCoinsRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.totalBudget = totalBudget;
            EBarter.CoinInventoryService.HowMuchMinCoinsResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).HowMuchMinCoins(inValue);
            return retVal.Body.HowMuchMinCoinsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMinCoinsResponse> EBarter.CoinInventoryService.CoinInventorySoap.HowMuchMinCoinsAsync(EBarter.CoinInventoryService.HowMuchMinCoinsRequest request) {
            return base.Channel.HowMuchMinCoinsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMinCoinsResponse> HowMuchMinCoinsAsync(string coinName, double totalBudget) {
            EBarter.CoinInventoryService.HowMuchMinCoinsRequest inValue = new EBarter.CoinInventoryService.HowMuchMinCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.HowMuchMinCoinsRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.totalBudget = totalBudget;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).HowMuchMinCoinsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EBarter.CoinInventoryService.HowMuchMaxCoinsResponse EBarter.CoinInventoryService.CoinInventorySoap.HowMuchMaxCoins(EBarter.CoinInventoryService.HowMuchMaxCoinsRequest request) {
            return base.Channel.HowMuchMaxCoins(request);
        }
        
        public double HowMuchMaxCoins(string coinName, double totalBudget) {
            EBarter.CoinInventoryService.HowMuchMaxCoinsRequest inValue = new EBarter.CoinInventoryService.HowMuchMaxCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.HowMuchMaxCoinsRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.totalBudget = totalBudget;
            EBarter.CoinInventoryService.HowMuchMaxCoinsResponse retVal = ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).HowMuchMaxCoins(inValue);
            return retVal.Body.HowMuchMaxCoinsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMaxCoinsResponse> EBarter.CoinInventoryService.CoinInventorySoap.HowMuchMaxCoinsAsync(EBarter.CoinInventoryService.HowMuchMaxCoinsRequest request) {
            return base.Channel.HowMuchMaxCoinsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EBarter.CoinInventoryService.HowMuchMaxCoinsResponse> HowMuchMaxCoinsAsync(string coinName, double totalBudget) {
            EBarter.CoinInventoryService.HowMuchMaxCoinsRequest inValue = new EBarter.CoinInventoryService.HowMuchMaxCoinsRequest();
            inValue.Body = new EBarter.CoinInventoryService.HowMuchMaxCoinsRequestBody();
            inValue.Body.coinName = coinName;
            inValue.Body.totalBudget = totalBudget;
            return ((EBarter.CoinInventoryService.CoinInventorySoap)(this)).HowMuchMaxCoinsAsync(inValue);
        }
    }
}
